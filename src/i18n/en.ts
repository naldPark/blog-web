export default {
  lang: "en",
  hello: "HELLO ALL",
  nald: "Nald's pensieve box.",
  name: "name",
  email: "email",
  title: "title",
  content: "content",
  send: "send",
  category: "category",
  blog: "For note-taking and arranging my work",
  github: "A tool to upload my own code and manage",
  naver: "Blog I used to use before",
  complete: "complete",
  leave: "leave",
  error: "error",
  unknownError: 'Undefined Error occurred.',
  password: "Password",
  passwordConfirm: "Confirm password",
  show: "show",
  hide: "hide",
  copied: "copied",
  editPassword: "edit Password",
  adminPage: "Admin Page",
  logout: "logout",
  id: "id",
  idDes: "Enter your id",
  pwdDes: "Enter your password",
  cancel: "cancel",
  confirm: "confirm",
  doLogin: "Please log in to access",
  loggedOut: "You are now successfully logged out",
  noGuestAccess: "Restricting Guest Access",
  changePwd: "Please set a password",
  changePwdConfirm: "Please re-enter your password",
  requiredError: "{0} is required",
  idRulesError: "Id is allowed lowercase letters and numbers ",
  lengthRulesError: "{0} must be less than {1} characters",
  emailRulesError: "E-mail must be valid",
  passwordRulesError: "passwords do not match",
  mobileWarining: "This page is for PC screen",
  accessDenied: "Access Denied",
  inputEmpty: 'Please fill in the required fields.',
  emailValidate: 'Please fill in E-mail field correctly',
  typeMessage: 'Type your message here',
  searchPlaceHolder: 'Search',
  countPerPage: "case/page",
  group: "group",
  status: "status",
  user: "user",
  login: "login",
  admin: "admin",
  failCnt: "failed login",
  lastLoginDt: "Last Access",
  registDt: "registed date",
  edit: "edit",
  delete: "delete",
  userManage: "User Manage",
  resourceManage: "resource Manage",
  emptyManage: "Manage",
  addUser: "add User",
  editUser: "edit User",
  deleteUsers: "delete users",
  deleteUsersMsg: "Are you sure to delete user {0} ?",
  confirmMsg: "your request has been completed",
  chat: {
    enterInfo: "Please check yourname and enter",
    enter: "Enter",
    chatRoom: "Room ID",
    connecting: " Connecting...",
  },
  video: {
    uploadDetail: "Drop your file here, or click to select (.mp4 only)",
    uploadedDetail: "File has been selected. Click if you want to change.",
    upload: "upload",
    videoPageSubTitle: "Choose whatever you like. Take your pick !",
    playAny: "Play random discovery",
    uploadVideo: "Upload new video",
    selectedFile: "selected file",
    uploadFileSize: "upload file size",
    movieName: "movie name",
    category: "category",
    description: "description",
    fileCover: "file cover(.png only)",
    subtitle: "subtitle(.vtt)",
    ableToDownload: "able to download",
    private: "is private",
    download: "download",
    synopsis: "synopsis",
    recommendedMovie: "recommendedMovie",
    all: "All",
    movie: "Movie (license expired)",
    tomAndJerry: "Tom and Jerry ",
    nald: "nald"
  },
  menubar: {
    home: "home",
    infra: "How this page created",
    sandbox: "Sandbox ( EC2 )",
    blog: "Blog",
    aboutMe: "About Me",
    wonderWall: "Wonder Wall",
    contact: "Contact Me",
    video: "Nald TV",
    crawling: "Crawling",
    shareLocker: "shareLocker ( S3 )",
    utils: "Utils",
    characterTest: "CharacterTest",
    doodle: "Doodle",
    bookCafe: "BookCafe",
    coinLocker: "Coin Locker",
    clilendor: "Chat Room",
    webApp: "PWA (Web App)",
    catchDrawing: "Catch Drawing",
  },
  sandbox: {
    funcInfo: "Function Info",
    rules: "Rules",
    rulesDesc: "- one sandbox is provided based ubuntu per id <br>  - change status to stop if you don't use it<br>  - sandbox will be initialized if no access more than 10 days <br> ",
    howToUse: "How to use",
    howToUseDesc: "- It is able to access when status is running <br>- Click the button startInstatnce / Password is written on right side of the button <br>",
    environmentInfo: "Environment info",
    status: "Status",
    instanceInfo: "Instance info",
    startInstance: "Start instance",
    instancePwd: "Instance password",
    containerImage: "Container image",
    sourceFolder: "Source folder",
  },
  file_check_error: {
    file_extension: "List of file extension:",
    max_file_size: "Max file size: {0}",
    local_file_error:
      "There is a file that cannot be registered.\n Please check the conditions for registration below and register again.\n\n",
    folder_file_error:
      "A file that cannot be registered is included.\n Please check the conditions.\n UnavailableFiles: {0}.\n\n",
    file_type_error:
      "This file extension cannot be registered.\n Please check the file extension that can be registered below and register again.\n\n",
    file_size_error:
      "The maximum file size that can be registered has been exceeded.\n Please check the maximum file size below and register again.\n\n",
    file_set_error: "Data set of unknown type.",
    file_error: "Error occurred when calling the API. \n please check the file .(ex: file name, special character etc) \n\n {0} \n ask the administrator "
  },
  prMessage: "Mainly specialized in <b>Javascript</b> for frontend, <b>Java</b> for backend as well DevOps tools like <b>Docker, Kubernetes.</b> <br>Highly self-motivated about solving tech problem through writing clean code and build more efficient architecture.<br> Check out my work below.",
  contactMsg: "Please feel free to reach out to me",
};
